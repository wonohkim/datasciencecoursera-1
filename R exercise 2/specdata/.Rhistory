install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
install.pakages("swirl)
install.packages("swirl")
library("swirl")
swirl()
bye()
q()
library("swirl")
swirl()
bye()
swirl()
x<-4L
x
class(x)
x<-list(2,"a","b",TRUE)
x[[2]]
class(x)
x<-1:4
y<-2:3
z=x+y
x
y
z
x<-c(3,5,1,10,12,6)
x[x<=5]<-0
x
x<-list(2,"a","b",TRUE)
x[[2]]
y<-x[[2]]
y
class(y)
x<-list(2,"a","b",TRUE)
y<-x[[1]]
y
class(y)
lenght(y)
x<-1:4
y<-2
x+y
add2<-function(x,y){
x+y
}
add2(2,3)
above<-function(x,n){
use<-x>n
x[use]
}
x<-1:10
above(x,5)
columnmean <- function(y) {
nc<- ncol(y)
means<-numeric(nc)
for(i in 1:nc) {
means[i]<-mean(y[,i])
}
means
}
help.search(numeric)
help.search("numeric")
R.version.string
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9.3.14)
z<-c(1.1,4,3.14)
z<-c(1.1,4,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
Pi:10
pi:10
15:1
':'
?':'
seq(1,20)
seq(1,20,by=0.5)
seq(0,20,by=0.5)
seq(0,10,by=0.5)
my_seq<-seq(5,10,lenght=30)
my_seq<-seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
?seq
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
?rep
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
?paste
paste(my_char,collapse =" ")
c(my_char,"CN3ves")
my_name<-c(my_char,"CN3ves")
my_name
paste(my_name,collapse =" ")
paste("Hello", "world!")
paste("Hello", "world!", collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep "")
paste(1:3, c("X","Y","Z"), sep "")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS,1:4, sep = "-")
library(swirl)
swirl
swirl()
c(0.5,55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
ft
tf
num_vect>6
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name<-c(my_char,"CN3ves")
my_name
paste(my_name, collapse =" ")
paste("Hello","world"!, sep =" ")
paste("Hello","world!", sep =" ")
paste(1:3,c("X","Y",Z),sep ="")
paste(1:3,c("X","Y","Z"),sep ="")
paste(LETTERS,1:4,sep ="")
paste(LETTERS,1:4,sep ="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
?sample
is.na(my_data)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x(!is.na(x) & x>0)
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
?identical
identical(vect,vect2)
vect["2"]
vect["bar"]
vect[c("foo","bar")]
my_vector<-c(1:20)
info()
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
indentical(my_matrix,my_matrix2)
identical(my_matrix,my_matrix2)
patitents<-c("Bill","Gina","Kelly", "Sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
head(flags)
dim(flafs)
dim(flags)
viewinfo(flags)
?viewinfo()
class(flags)
cls_list<-lapply(flags,class)
?lapply
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vector)
class(cls_vect)
sum(flags$orange)
flags_colors<-flags[,11:17]
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flags_colors,sum)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
?unique
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,lenght)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem elem[2]))
lapply(unique_vals, function(elem) elem[2])
viewinfo(flags)
viewinfo()
saplly(flags,unique)
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
?table
table(flags$animate)
taplly(flags$animate,flags$landmass,mean)
tapply(flags$animate,flags$landmass,mean)
taplly(flags$population,flags$red,summary)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dims(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
objet.size(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,rplace=TRUE)
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbimon(1,size=100,prob=0,7)
rbinom(1,size=100,prob=0,7)
rbinom(1,size = 100,prob=0.7)
flips<-rbinom(1,size = 100,prob=0.7)
flips<-rbinom(100,size = 1,prob=0.7)
flips<-rbinom(n=100,size = 1,prob=0.7)
flips2<-rbinom(n=100,size = 1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois()
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
?replicate
?rep
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Data()
d1<-Sys.Date()
class(d1)
unclass(d1)
da
d1
d2<-as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekday(d1)
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3,"%B,%d,%Y %H:%M")
?strptime()
t4<-strptime(t3,"%B %d,%Y %H:%M")
t4<-strptime(t3, "%B %d,%Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Systime(),t1,units = "days")
difftime(Systime(),t1,units = 'days')
difftime(Sys.time(),t1,units = 'days')
info()
bye()
exit()
library(datasets)
data(iris)
?iris
head(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
colMeans(iris)
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
head(mtcars)
?with
with(mycars,tapply(mpg,cyl,mean))
with(mtcars,tapply(mpg,cyl,mean))
with(mtcars,tapply(hp,cyl,mean))
mean<-with(mtcars,tapply(hp,cyl,mean))
4cyl<-mean[1]
cyl4<-mean[1]
cyl8<-mean[3]
cly8-cyl4
cyl8-cyl4
cyl4<-mean[1,1]
dim(mean)
mean$8-mean$4
c<-mean$8-mean$4
m<-mean
m
names(m)
m$4
m$"4"
?names
names(m)<-NULL
m
names(m)
?unname
class(m)
unname(m)
c4<-unmame(m[1])
c4<-m[1]
c4
unname(c4)
c4<-unname(c4)
c8<-unname(m[3])
c8-c4
debug(ls)
ls
n
ls()
Q
ls()
?solve
?dim
m1<-1:4
dim(m1)<-c(2,2)
m1
solve(m1)
m2<-solve(m1)
m1*m2
m1%*%m2
?<<-
help(<<-)
help("<<-")
?function
?matrix()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(1:10)
x<-1:10
makeVector(x)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(x)
x
as.dataframe(x)
?as.
as.matrix
?as.matrix
as.matrix(x)
x<-as.matrix(x)
x
cachemean(x)
makeVector(x)
cachemean(x)
a<-makeVector(c(1,2,3,4))
a$getmean()
cachemean(a)
a$getmean()
cachemean(a)
a<-makeVector(c(10,20,30,40))
a$getmean()
cachemean(a)
cachemean(a)
a$get()
debug(makeVector)
a<-makeVector(1:10)
get
a
x
y
makeCacheMatrix <- function(x = matrix()) {
# Set the value of the matrix
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
}
a<-makeCacheMatrix(1:20)
y
a
setwd("~/datasciencecoursera/R exercise 2/specdata")
ls()
cd
list.files()
file<-file(331.csv, "r")
file<-file(331.csv, -r)
file<-file("331.csv", "r")
data<-read(file)
data<-read.csv(file)
summary(data)
str(data)
